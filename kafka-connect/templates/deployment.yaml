apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: {{ include "kafka-connect.fullname" . }}
  labels:
    {{- include "kafka-connect.labels" . | nindent 4 }}
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  version: 3.5.1
  replicas: 1
  bootstrapServers: {{ .Values.BootstrapServers }}
  tls:
    trustedCertificates:
      - secretName: {{ .Values.ClientCertificateSecretName }}
        certificate: ca.crt
  authentication:
    type: scram-sha-512
    username: {{ .Values.KafkaUsername }}
    passwordSecret:
      secretName: {{ .Values.PasswordSecretName }}
      password: password
  config:
    group.id: connect-cluster
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status
    # -1 means it will use the default replication factor configured in the broker
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
    key.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter: org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable: false
    value.converter.schemas.enable: false
  resources:
    requests:
      memory: 1Gi
      cpu: 500m
    limits:
      memory: 1Gi
      cpu: 1000m
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: connect-metrics
        key: metrics-config.yml      
  jvmOptions:
    -Xms: 256m
    -Xmx: 256m
  build:
    output:
      type: docker
      image: ttl.sh/strimzi-connect-example-{{ include "kafka-connect.fullname" . }}:24h
    plugins:
      {{- range $pkey, $pval := .Values.plugins }}
      - name: {{ index $pval "name" | quote }}
        artifacts:
        - type: {{ index $pval "type" | quote }}
          url: {{ index $pval "url" | quote }}
      {{- end }}
  template:
    pod:
      securityContext:
        runAsUser: 0

